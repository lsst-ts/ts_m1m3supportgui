
import QTHelpers
from PySide2.QtWidgets import (QWidget, QLabel, QVBoxLayout, QGridLayout)
import numpy as np
import pyqtgraph as pg
from pyqtgraph.ptime import time
from pyqtgraph.Qt import QtGui, QtCore, QT_LIB

class ActuatorOverviewPageWidget(QWidget):
    def __init__(self, MTM1M3):
        QWidget.__init__(self)
        self.MTM1M3 = MTM1M3
        self.layout = QVBoxLayout()
        self.dataLayout = QGridLayout()
        self.plotLayout = QVBoxLayout()

        self.maxPlotSize = 50 * 30 # 50Hz * 30s

        self.plot = pg.PlotWidget()
        self.plot.plotItem.addLegend()
        self.plot.plotItem.setTitle("Total Force")
        self.plot.plotItem.setLabel(axis = 'left', text = 'Force (N)')
        self.plot.plotItem.setLabel(axis = 'bottom', text = 'Age (s)')
        self.plotLayout.addWidget(self.plot)
        self.layout.addLayout(self.dataLayout)
        self.layout.addLayout(self.plotLayout)
        self.setLayout(self.layout)

        self.totalCommandedMagCurveData = np.array([np.zeros(self.maxPlotSize)])
        self.totalCommandedMagCurve = self.plot.plot(name = 'Total Mag', pen = 'r')

        self.forceFormat = "%0.1f"
        self.momentFormat = "%0.1f"

        row = 0
        col = 0
        self.totalCommandedXLabel = QLabel("UNKNOWN")
        self.totalCommandedYLabel = QLabel("UNKNOWN")
        self.totalCommandedZLabel = QLabel("UNKNOWN")
        self.totalCommandedMxLabel = QLabel("UNKNOWN")
        self.totalCommandedMyLabel = QLabel("UNKNOWN")
        self.totalCommandedMzLabel = QLabel("UNKNOWN")
        self.totalCommandedMagLabel = QLabel("UNKNOWN")
        self.totalMeasuredXLabel = QLabel("UNKNOWN")
        self.totalMeasuredYLabel = QLabel("UNKNOWN")
        self.totalMeasuredZLabel = QLabel("UNKNOWN")
        self.totalMeasuredMxLabel = QLabel("UNKNOWN")
        self.totalMeasuredMyLabel = QLabel("UNKNOWN")
        self.totalMeasuredMzLabel = QLabel("UNKNOWN")
        self.totalMeasuredMagLabel = QLabel("UNKNOWN")
        self.totalErrorXLabel = QLabel("UNKNOWN")
        self.totalErrorYLabel = QLabel("UNKNOWN")
        self.totalErrorZLabel = QLabel("UNKNOWN")
        self.totalErrorMxLabel = QLabel("UNKNOWN")
        self.totalErrorMyLabel = QLabel("UNKNOWN")
        self.totalErrorMzLabel = QLabel("UNKNOWN")
        self.totalErrorMagLabel = QLabel("UNKNOWN")
        self.totalMirrorXLabel = QLabel("UNKNOWN")
        self.totalMirrorYLabel = QLabel("UNKNOWN")
        self.totalMirrorZLabel = QLabel("UNKNOWN")
        self.totalMirrorMxLabel = QLabel("UNKNOWN")
        self.totalMirrorMyLabel = QLabel("UNKNOWN")
        self.totalMirrorMzLabel = QLabel("UNKNOWN")
        self.totalMirrorMagLabel = QLabel("UNKNOWN")
        self.accelerationXLabel = QLabel("UNKNOWN")
        self.accelerationYLabel = QLabel("UNKNOWN")
        self.accelerationZLabel = QLabel("UNKNOWN")
        self.accelerationMxLabel = QLabel("UNKNOWN")
        self.accelerationMyLabel = QLabel("UNKNOWN")
        self.accelerationMzLabel = QLabel("UNKNOWN")
        self.accelerationMagLabel = QLabel("UNKNOWN")
        self.aberrationZLabel = QLabel("UNKNOWN")
        self.aberrationMxLabel = QLabel("UNKNOWN")
        self.aberrationMyLabel = QLabel("UNKNOWN")
        self.aberrationMagLabel = QLabel("UNKNOWN")
        self.activeOpticZLabel = QLabel("UNKNOWN")
        self.activeOpticMxLabel = QLabel("UNKNOWN")
        self.activeOpticMyLabel = QLabel("UNKNOWN")
        self.activeOpticMagLabel = QLabel("UNKNOWN")
        self.azimuthXLabel = QLabel("UNKNOWN")
        self.azimuthYLabel = QLabel("UNKNOWN")
        self.azimuthZLabel = QLabel("UNKNOWN")
        self.azimuthMxLabel = QLabel("UNKNOWN")
        self.azimuthMyLabel = QLabel("UNKNOWN")
        self.azimuthMzLabel = QLabel("UNKNOWN")
        self.azimuthMagLabel = QLabel("UNKNOWN")
        self.balanceXLabel = QLabel("UNKNOWN")
        self.balanceYLabel = QLabel("UNKNOWN")
        self.balanceZLabel = QLabel("UNKNOWN")
        self.balanceMxLabel = QLabel("UNKNOWN")
        self.balanceMyLabel = QLabel("UNKNOWN")
        self.balanceMzLabel = QLabel("UNKNOWN")
        self.balanceMagLabel = QLabel("UNKNOWN")
        self.elevationXLabel = QLabel("UNKNOWN")
        self.elevationYLabel = QLabel("UNKNOWN")
        self.elevationZLabel = QLabel("UNKNOWN")
        self.elevationMxLabel = QLabel("UNKNOWN")
        self.elevationMyLabel = QLabel("UNKNOWN")
        self.elevationMzLabel = QLabel("UNKNOWN")
        self.elevationMagLabel = QLabel("UNKNOWN")
        self.offsetXLabel = QLabel("UNKNOWN")
        self.offsetYLabel = QLabel("UNKNOWN")
        self.offsetZLabel = QLabel("UNKNOWN")
        self.offsetMxLabel = QLabel("UNKNOWN")
        self.offsetMyLabel = QLabel("UNKNOWN")
        self.offsetMzLabel = QLabel("UNKNOWN")
        self.offsetMagLabel = QLabel("UNKNOWN")
        self.staticXLabel = QLabel("UNKNOWN")
        self.staticYLabel = QLabel("UNKNOWN")
        self.staticZLabel = QLabel("UNKNOWN")
        self.staticMxLabel = QLabel("UNKNOWN")
        self.staticMyLabel = QLabel("UNKNOWN")
        self.staticMzLabel = QLabel("UNKNOWN")
        self.staticMagLabel = QLabel("UNKNOWN")
        self.thermalXLabel = QLabel("UNKNOWN")
        self.thermalYLabel = QLabel("UNKNOWN")
        self.thermalZLabel = QLabel("UNKNOWN")
        self.thermalMxLabel = QLabel("UNKNOWN")
        self.thermalMyLabel = QLabel("UNKNOWN")
        self.thermalMzLabel = QLabel("UNKNOWN")
        self.thermalMagLabel = QLabel("UNKNOWN")
        self.velocityXLabel = QLabel("UNKNOWN")
        self.velocityYLabel = QLabel("UNKNOWN")
        self.velocityZLabel = QLabel("UNKNOWN")
        self.velocityMxLabel = QLabel("UNKNOWN")
        self.velocityMyLabel = QLabel("UNKNOWN")
        self.velocityMzLabel = QLabel("UNKNOWN")
        self.velocityMagLabel = QLabel("UNKNOWN")
        self.dataLayout.addWidget(QLabel("Forces"), row, col)
        self.dataLayout.addWidget(QLabel("X (N)"), row, col + 1)
        self.dataLayout.addWidget(QLabel("Y (N)"), row, col + 2)
        self.dataLayout.addWidget(QLabel("Z (N)"), row, col + 3)
        self.dataLayout.addWidget(QLabel("Mx (Nm)"), row, col + 4)
        self.dataLayout.addWidget(QLabel("My (Nm)"), row, col + 5)
        self.dataLayout.addWidget(QLabel("Mz (Nm)"), row, col + 6)
        self.dataLayout.addWidget(QLabel("Magnitude (N)"), row, col + 7)
        self.dataLayout.addWidget(QLabel("Total Commanded"), row + 1, col)
        self.dataLayout.addWidget(self.totalCommandedXLabel, row + 1, col + 1)
        self.dataLayout.addWidget(self.totalCommandedYLabel, row + 1, col + 2)
        self.dataLayout.addWidget(self.totalCommandedZLabel, row + 1, col + 3)
        self.dataLayout.addWidget(self.totalCommandedMxLabel, row + 1, col + 4)
        self.dataLayout.addWidget(self.totalCommandedMyLabel, row + 1, col + 5)
        self.dataLayout.addWidget(self.totalCommandedMzLabel, row + 1, col + 6)
        self.dataLayout.addWidget(self.totalCommandedMagLabel, row + 1, col + 7)
        self.dataLayout.addWidget(QLabel("Total Measured"), row + 2, col)
        self.dataLayout.addWidget(self.totalMeasuredXLabel, row + 2, col + 1)
        self.dataLayout.addWidget(self.totalMeasuredYLabel, row + 2, col + 2)
        self.dataLayout.addWidget(self.totalMeasuredZLabel, row + 2, col + 3)
        self.dataLayout.addWidget(self.totalMeasuredMxLabel, row + 2, col + 4)
        self.dataLayout.addWidget(self.totalMeasuredMyLabel, row + 2, col + 5)
        self.dataLayout.addWidget(self.totalMeasuredMzLabel, row + 2, col + 6)
        self.dataLayout.addWidget(self.totalMeasuredMagLabel, row + 2, col + 7)
        self.dataLayout.addWidget(QLabel("Total Error"), row + 3, col)
        self.dataLayout.addWidget(self.totalErrorXLabel, row + 3, col + 1)
        self.dataLayout.addWidget(self.totalErrorYLabel, row + 3, col + 2)
        self.dataLayout.addWidget(self.totalErrorZLabel, row + 3, col + 3)
        self.dataLayout.addWidget(self.totalErrorMxLabel, row + 3, col + 4)
        self.dataLayout.addWidget(self.totalErrorMyLabel, row + 3, col + 5)
        self.dataLayout.addWidget(self.totalErrorMzLabel, row + 3, col + 6)
        self.dataLayout.addWidget(self.totalErrorMagLabel, row + 3, col + 7)
        self.dataLayout.addWidget(QLabel("Total Mirror"), row + 4, col)
        self.dataLayout.addWidget(self.totalMirrorXLabel, row + 4, col + 1)
        self.dataLayout.addWidget(self.totalMirrorYLabel, row + 4, col + 2)
        self.dataLayout.addWidget(self.totalMirrorZLabel, row + 4, col + 3)
        self.dataLayout.addWidget(self.totalMirrorMxLabel, row + 4, col + 4)
        self.dataLayout.addWidget(self.totalMirrorMyLabel, row + 4, col + 5)
        self.dataLayout.addWidget(self.totalMirrorMzLabel, row + 4, col + 6)
        self.dataLayout.addWidget(self.totalMirrorMagLabel, row + 4, col + 7)
        self.dataLayout.addWidget(QLabel("Acceleration"), row + 5, col)
        self.dataLayout.addWidget(self.accelerationXLabel, row + 5, col + 1)
        self.dataLayout.addWidget(self.accelerationYLabel, row + 5, col + 2)
        self.dataLayout.addWidget(self.accelerationZLabel, row + 5, col + 3)
        self.dataLayout.addWidget(self.accelerationMxLabel, row + 5, col + 4)
        self.dataLayout.addWidget(self.accelerationMyLabel, row + 5, col + 5)
        self.dataLayout.addWidget(self.accelerationMzLabel, row + 5, col + 6)
        self.dataLayout.addWidget(self.accelerationMagLabel, row + 5, col + 7)
        self.dataLayout.addWidget(QLabel("Aberration"), row + 6, col)
        self.dataLayout.addWidget(QLabel("-"), row + 6, col + 1)
        self.dataLayout.addWidget(QLabel("-"), row + 6, col + 2)
        self.dataLayout.addWidget(self.aberrationZLabel, row + 6, col + 3)
        self.dataLayout.addWidget(self.aberrationMxLabel, row + 6, col + 4)
        self.dataLayout.addWidget(self.aberrationMyLabel, row + 6, col + 5)
        self.dataLayout.addWidget(QLabel("-"), row + 6, col + 6)
        self.dataLayout.addWidget(self.aberrationMagLabel, row + 6, col +7)
        self.dataLayout.addWidget(QLabel("Active Optic"), row + 7, col)
        self.dataLayout.addWidget(QLabel("-"), row + 7, col + 1)
        self.dataLayout.addWidget(QLabel("-"), row + 7, col + 2)
        self.dataLayout.addWidget(self.activeOpticZLabel, row + 7, col + 3)
        self.dataLayout.addWidget(self.activeOpticMxLabel, row + 7, col + 4)
        self.dataLayout.addWidget(self.activeOpticMyLabel, row + 7, col + 5)
        self.dataLayout.addWidget(QLabel("-"), row + 7, col + 6)
        self.dataLayout.addWidget(self.activeOpticMagLabel, row + 7, col + 7)
        self.dataLayout.addWidget(QLabel("Azimuth"), row + 8, col)
        self.dataLayout.addWidget(self.azimuthXLabel, row + 8, col + 1)
        self.dataLayout.addWidget(self.azimuthYLabel, row + 8, col + 2)
        self.dataLayout.addWidget(self.azimuthZLabel, row + 8, col + 3)
        self.dataLayout.addWidget(self.azimuthMxLabel, row + 8, col + 4)
        self.dataLayout.addWidget(self.azimuthMyLabel, row + 8, col + 5)
        self.dataLayout.addWidget(self.azimuthMzLabel, row + 8, col + 6)
        self.dataLayout.addWidget(self.azimuthMagLabel, row + 8, col + 7)
        self.dataLayout.addWidget(QLabel("Balance"), row + 9, col)
        self.dataLayout.addWidget(self.balanceXLabel, row + 9, col + 1)
        self.dataLayout.addWidget(self.balanceYLabel, row + 9, col + 2)
        self.dataLayout.addWidget(self.balanceZLabel, row + 9, col + 3)
        self.dataLayout.addWidget(self.balanceMxLabel, row + 9, col + 4)
        self.dataLayout.addWidget(self.balanceMyLabel, row + 9, col + 5)
        self.dataLayout.addWidget(self.balanceMzLabel, row + 9, col + 6)
        self.dataLayout.addWidget(self.balanceMagLabel, row + 9, col + 7)
        self.dataLayout.addWidget(QLabel("Elevation"), row + 10, col)
        self.dataLayout.addWidget(self.elevationXLabel, row + 10, col + 1)
        self.dataLayout.addWidget(self.elevationYLabel, row + 10, col + 2)
        self.dataLayout.addWidget(self.elevationZLabel, row + 10, col + 3)
        self.dataLayout.addWidget(self.elevationMxLabel, row + 10, col + 4)
        self.dataLayout.addWidget(self.elevationMyLabel, row + 10, col + 5)
        self.dataLayout.addWidget(self.elevationMzLabel, row + 10, col + 6)
        self.dataLayout.addWidget(self.elevationMagLabel, row + 10, col + 7)
        self.dataLayout.addWidget(QLabel("Offset"), row + 11, col)
        self.dataLayout.addWidget(self.offsetXLabel, row + 11, col + 1)
        self.dataLayout.addWidget(self.offsetYLabel, row + 11, col + 2)
        self.dataLayout.addWidget(self.offsetZLabel, row + 11, col + 3)
        self.dataLayout.addWidget(self.offsetMxLabel, row + 11, col + 4)
        self.dataLayout.addWidget(self.offsetMyLabel, row + 11, col + 5)
        self.dataLayout.addWidget(self.offsetMzLabel, row + 11, col + 6)
        self.dataLayout.addWidget(self.offsetMagLabel, row + 11, col + 7)
        self.dataLayout.addWidget(QLabel("Static"), row + 12, col)
        self.dataLayout.addWidget(self.staticXLabel, row + 12, col + 1)
        self.dataLayout.addWidget(self.staticYLabel, row + 12, col + 2)
        self.dataLayout.addWidget(self.staticZLabel, row + 12, col + 3)
        self.dataLayout.addWidget(self.staticMxLabel, row + 12, col + 4)
        self.dataLayout.addWidget(self.staticMyLabel, row + 12, col + 5)
        self.dataLayout.addWidget(self.staticMzLabel, row + 12, col + 6)
        self.dataLayout.addWidget(self.staticMagLabel, row + 12, col + 7)
        self.dataLayout.addWidget(QLabel("Thermal"), row + 13, col)
        self.dataLayout.addWidget(self.thermalXLabel, row + 13, col + 1)
        self.dataLayout.addWidget(self.thermalYLabel, row + 13, col + 2)
        self.dataLayout.addWidget(self.thermalZLabel, row + 13, col + 3)
        self.dataLayout.addWidget(self.thermalMxLabel, row + 13, col + 4)
        self.dataLayout.addWidget(self.thermalMyLabel, row + 13, col + 5)
        self.dataLayout.addWidget(self.thermalMzLabel, row + 13, col + 6)
        self.dataLayout.addWidget(self.thermalMagLabel, row + 13, col + 7)
        self.dataLayout.addWidget(QLabel("Velocity"), row + 14, col)
        self.dataLayout.addWidget(self.velocityXLabel, row + 14, col + 1)
        self.dataLayout.addWidget(self.velocityYLabel, row + 14, col + 2)
        self.dataLayout.addWidget(self.velocityZLabel, row + 14, col + 3)
        self.dataLayout.addWidget(self.velocityMxLabel, row + 14, col + 4)
        self.dataLayout.addWidget(self.velocityMyLabel, row + 14, col + 5)
        self.dataLayout.addWidget(self.velocityMzLabel, row + 14, col + 6)
        self.dataLayout.addWidget(self.velocityMagLabel, row + 14, col + 7)

        self.MTM1M3.subscribeEvent_appliedAberrationForces(self.processEventAppliedAberrationForces)
        self.MTM1M3.subscribeEvent_appliedAccelerationForces(self.processEventAppliedAccelerationForces)
        self.MTM1M3.subscribeEvent_appliedActiveOpticForces(self.processEventAppliedActiveOpticForces)
        self.MTM1M3.subscribeEvent_appliedAzimuthForces(self.processEventAppliedAzimuthForces)
        self.MTM1M3.subscribeEvent_appliedBalanceForces(self.processEventAppliedBalanceForces)
        self.MTM1M3.subscribeEvent_appliedCylinderForces(self.processEventAppliedCylinderForces)
        self.MTM1M3.subscribeEvent_appliedElevationForces(self.processEventAppliedElevationForces)
        self.MTM1M3.subscribeEvent_appliedForces(self.processEventAppliedForces)
        self.MTM1M3.subscribeEvent_appliedOffsetForces(self.processEventAppliedOffsetForces)
        self.MTM1M3.subscribeEvent_appliedStaticForces(self.processEventAppliedStaticForces)
        self.MTM1M3.subscribeEvent_appliedThermalForces(self.processEventAppliedThermalForces)
        self.MTM1M3.subscribeEvent_appliedVelocityForces(self.processEventAppliedVelocityForces)

    def processEventAppliedAberrationForces(self, data):
        data = data[-1]
        self.aberrationZLabel.setText(self.forceFormat % data.fZ)
        self.aberrationMxLabel.setText(self.momentFormat % data.mX)
        self.aberrationMyLabel.setText(self.momentFormat % data.mY)
        self.aberrationMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedAccelerationForces(self, data):
        data = data[-1]
        self.accelerationXLabel.setText(self.forceFormat % data.fX)
        self.accelerationYLabel.setText(self.forceFormat % data.fY)
        self.accelerationZLabel.setText(self.forceFormat % data.fZ)
        self.accelerationMxLabel.setText(self.momentFormat % data.mX)
        self.accelerationMyLabel.setText(self.momentFormat % data.mY)
        self.accelerationMzLabel.setText(self.momentFormat % data.mZ)
        self.accelerationMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedActiveOpticForces(self, data):
        data = data[-1]
        self.activeOpticZLabel.setText(self.forceFormat % data.fZ)
        self.activeOpticMxLabel.setText(self.momentFormat % data.mX)
        self.activeOpticMyLabel.setText(self.momentFormat % data.mY)
        self.activeOpticMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedAzimuthForces(self, data):
        data = data[-1]
        self.azimuthXLabel.setText(self.forceFormat % data.fX)
        self.azimuthYLabel.setText(self.forceFormat % data.fY)
        self.azimuthZLabel.setText(self.forceFormat % data.fZ)
        self.azimuthMxLabel.setText(self.momentFormat % data.mX)
        self.azimuthMyLabel.setText(self.momentFormat % data.mY)
        self.azimuthMzLabel.setText(self.momentFormat % data.mZ)
        self.azimuthMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedBalanceForces(self, data):
        data = data[-1]
        self.balanceXLabel.setText(self.forceFormat % data.fX)
        self.balanceYLabel.setText(self.forceFormat % data.fY)
        self.balanceZLabel.setText(self.forceFormat % data.fZ)
        self.balanceMxLabel.setText(self.momentFormat % data.mX)
        self.balanceMyLabel.setText(self.momentFormat % data.mY)
        self.balanceMzLabel.setText(self.momentFormat % data.mZ)
        self.balanceMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedCylinderForces(self, data):
        pass

    def processEventAppliedElevationForces(self, data):
        data = data[-1]
        self.elevationXLabel.setText(self.forceFormat % data.fX)
        self.elevationYLabel.setText(self.forceFormat % data.fY)
        self.elevationZLabel.setText(self.forceFormat % data.fZ)
        self.elevationMxLabel.setText(self.momentFormat % data.mX)
        self.elevationMyLabel.setText(self.momentFormat % data.mY)
        self.elevationMzLabel.setText(self.momentFormat % data.mZ)
        self.elevationMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedForces(self, data):
        self.totalCommandedMagCurveData = QTHelpers.appendAndResizeCurveData(self.totalCommandedMagCurveData, [x.forceMagnitude for x in data], self.maxPlotSize)
        self.totalCommandedMagCurve.setData(self.totalCommandedMagCurveData)

        data = data[-1]
        self.totalCommandedXLabel.setText(self.forceFormat % data.fX)
        self.totalCommandedYLabel.setText(self.forceFormat % data.fY)
        self.totalCommandedZLabel.setText(self.forceFormat % data.fZ)
        self.totalCommandedMxLabel.setText(self.momentFormat % data.mX)
        self.totalCommandedMyLabel.setText(self.momentFormat % data.mY)
        self.totalCommandedMzLabel.setText(self.momentFormat % data.mZ)
        self.totalCommandedMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedOffsetForces(self, data):
        data = data[-1]
        self.offsetXLabel.setText(self.forceFormat % data.fX)
        self.offsetYLabel.setText(self.forceFormat % data.fY)
        self.offsetZLabel.setText(self.forceFormat % data.fZ)
        self.offsetMxLabel.setText(self.momentFormat % data.mX)
        self.offsetMyLabel.setText(self.momentFormat % data.mY)
        self.offsetMzLabel.setText(self.momentFormat % data.mZ)
        self.offsetMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedStaticForces(self, data):
        data = data[-1]
        self.staticXLabel.setText(self.forceFormat % data.fX)
        self.staticYLabel.setText(self.forceFormat % data.fY)
        self.staticZLabel.setText(self.forceFormat % data.fZ)
        self.staticMxLabel.setText(self.momentFormat % data.mX)
        self.staticMyLabel.setText(self.momentFormat % data.mY)
        self.staticMzLabel.setText(self.momentFormat % data.mZ)
        self.staticMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedThermalForces(self, data):
        data = data[-1]
        self.thermalXLabel.setText(self.forceFormat % data.fX)
        self.thermalYLabel.setText(self.forceFormat % data.fY)
        self.thermalZLabel.setText(self.forceFormat % data.fZ)
        self.thermalMxLabel.setText(self.momentFormat % data.mX)
        self.thermalMyLabel.setText(self.momentFormat % data.mY)
        self.thermalMzLabel.setText(self.momentFormat % data.mZ)
        self.thermalMagLabel.setText(self.forceFormat % data.forceMagnitude)

    def processEventAppliedVelocityForces(self, data):
        data = data[-1]
        self.velocityXLabel.setText(self.forceFormat % data.fX)
        self.velocityYLabel.setText(self.forceFormat % data.fY)
        self.velocityZLabel.setText(self.forceFormat % data.fZ)
        self.velocityMxLabel.setText(self.momentFormat % data.mX)
        self.velocityMyLabel.setText(self.momentFormat % data.mY)
        self.velocityMzLabel.setText(self.momentFormat % data.mZ)
        self.velocityMagLabel.setText(self.forceFormat % data.forceMagnitude)